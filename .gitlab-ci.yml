stages:
  - build-and-test
  - benchmark
  - benchmark-completion

variables:
  PYTHONUNBUFFERED: "true"
  JVMCI_VERSION_CHECK: ignore
  GRAALEE_VERSION: oracle-graalvm-ea-jdk-24.0.0-ea.01
  JAVA_VERSION: temurin-22.0.1+8

.shared-scripts:
  download-binaries: &DOWNLOAD_BINARIES |
    sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/som-native-interp-ast.lz4
    sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/som-native-interp-bc.lz4
    sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/som-native-interp-op.lz4
    sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/som-native-interp-ast-ee.lz4
    sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/som-native-interp-bc-ee.lz4
    sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/som-native-interp-op-ee.lz4
    lz4 -d som-native-interp-ast.lz4 som-native-interp-ast
    lz4 -d som-native-interp-bc.lz4  som-native-interp-bc
    lz4 -d som-native-interp-op.lz4  som-native-interp-op
    lz4 -d som-native-interp-ast-ee.lz4 som-native-interp-ast-ee
    lz4 -d som-native-interp-bc-ee.lz4  som-native-interp-bc-ee
    lz4 -d som-native-interp-op-ee.lz4  som-native-interp-op-ee

  build-graal-locally: &BUILD_GRAAL_LOCALLY |
    ./som --setup labsjdk
    mx sforceimport
    mx --env libgraal build

  ensure_labsjdk: &ENSURE_LABSJDK_AND_GRAAL_VERSION |
    ./som --setup labsjdk
    mx sforceimport
    rm libs/jvmci || true
    ./som --setup labsjdk

before_script:
  - (cd core-lib && git remote add smarr https://github.com/smarr/SOM.git || true; git fetch --all)
  - git submodule update --init
  - ./som --setup latest-mx
  - export PATH=${PATH}:$(pwd)/../mx:/opt/local/bin
  - echo "PATH=$PATH"
  - (cd ../graal/compiler/mxbuild && sudo reown-project.sh) || true

  - |
    COMMIT_ID=`./som --setup truffle-commit-id`
    (cd ../graal && git fetch --all && git reset --hard $COMMIT_ID) || true

  - |
    ~/.asdf/bin/asdf install awfy $GRAALEE_VERSION
    ~/.asdf/bin/asdf install java $JAVA_VERSION
    export GRAALEE_HOME=$HOME/.asdf/installs/awfy/$GRAALEE_VERSION
    export ECLIPSE_EXE=$HOME/.local/eclipse/eclipse
    export JAVA_HOME=$HOME/.asdf/installs/java/$JAVA_VERSION

    if [ -d $GRAALEE_HOME/Contents/Home ]; then
      export GRAALEE_HOME=$GRAALEE_HOME/Contents/Home
    fi

test:
  stage: build-and-test
  tags: [yuria4]
  script:
    - *ENSURE_LABSJDK_AND_GRAAL_VERSION

    - mx build
    - mx tests-junit
    - mx tests-som
    - mx tests-somsom
    - mx build-native-image-tool
    - mx build-native-obj-test
    - ./som-obj-storage-tester

    - export JAVA_HOME=`pwd`/libs/jvmci
    - (cd ../graal/tools && mx build)
    - mx tests-nodestats || true
    - mx tests-coverage || true

build:native-interp-ast:
  stage: build-and-test
  tags: [yuria2]
  script:
    - *ENSURE_LABSJDK_AND_GRAAL_VERSION

    - mx build
    - mx build-native --no-jit -t AST -bn
    - ./som-native-interp-ast -cp Smalltalk TestSuite/TestHarness.som

    - mx build-native --no-jit -t AST -g ${GRAALEE_HOME}
    - ./som-native-interp-ast-ee -cp Smalltalk TestSuite/TestHarness.som

    # Package and Upload
    - lz4 som-native-interp-ast som-native-interp-ast.lz4
    - lz4 som-native-interp-ast-ee som-native-interp-ast-ee.lz4
    - |
      sftp tmp-artifacts << EOF
        -mkdir incoming/${CI_PIPELINE_ID}/
        put som-native-interp-ast.lz4 incoming/${CI_PIPELINE_ID}/
        put som-native-interp-ast-ee.lz4 incoming/${CI_PIPELINE_ID}/
      EOF

build:native-interp-bc:
  stage: build-and-test
  tags: [yuria3]
  script:
    - *ENSURE_LABSJDK_AND_GRAAL_VERSION

    - mx build
    - mx build-native --no-jit -t BC -bn
    - ./som-native-interp-bc -cp Smalltalk TestSuite/TestHarness.som

    - mx build-native --no-jit -t BC -g ${GRAALEE_HOME}
    - ./som-native-interp-bc-ee -cp Smalltalk TestSuite/TestHarness.som

    - lz4 som-native-interp-bc som-native-interp-bc.lz4
    - lz4 som-native-interp-bc-ee som-native-interp-bc-ee.lz4
    - |
      sftp tmp-artifacts << EOF
        -mkdir incoming/${CI_PIPELINE_ID}/
        put som-native-interp-bc.lz4 incoming/${CI_PIPELINE_ID}/
        put som-native-interp-bc-ee.lz4 incoming/${CI_PIPELINE_ID}/
      EOF

build:native-interp-op:
  stage: build-and-test
  tags: [yuria]
  script:
    - *ENSURE_LABSJDK_AND_GRAAL_VERSION

    - mx build
    - mx build-native -J -t OP -bn
    - ./som-native-interp-op -cp Smalltalk TestSuite/TestHarness.som

    - mx build-native -J -t OP -g ${GRAALEE_HOME}
    - ./som-native-interp-op-ee -cp Smalltalk TestSuite/TestHarness.som

    - lz4 som-native-interp-op som-native-interp-op.lz4
    - lz4 som-native-interp-op-ee som-native-interp-op-ee.lz4
    - |
      sftp tmp-artifacts << EOF
        -mkdir incoming/${CI_PIPELINE_ID}/
        put som-native-interp-op.lz4 incoming/${CI_PIPELINE_ID}/
        put som-native-interp-op-ee.lz4 incoming/${CI_PIPELINE_ID}/
      EOF

build:aarch64-test-and-rebench:
  stage: build-and-test
  tags: [zullie1]
  script:
    - pmset -g live
    - pmset -g systemstate

    - *ENSURE_LABSJDK_AND_GRAAL_VERSION

    - mx build
    - mx --env libgraal build
    - mx tests-junit
    - mx tests-som
    - mx tests-somsom
    - mx build-native-image-tool

    - mx build-native-obj-test
    - ./som-obj-storage-tester

    - mx build-native --no-jit -t BC
    - ./som-native-interp-bc -cp Smalltalk TestSuite/TestHarness.som

    - mx build-native --no-jit -t AST
    - ./som-native-interp-ast -cp Smalltalk TestSuite/TestHarness.som

    - mx build-native --no-jit -t OP
    - ./som-native-interp-op -cp Smalltalk TestSuite/TestHarness.som

    - mx build-native --no-jit -t BC -g ${GRAALEE_HOME}
    - ./som-native-interp-bc-ee -cp Smalltalk TestSuite/TestHarness.som

    - mx build-native --no-jit -t AST -g ${GRAALEE_HOME}
    - ./som-native-interp-ast-ee -cp Smalltalk TestSuite/TestHarness.som

    - mx build-native --no-jit -t OP -g ${GRAALEE_HOME}
    - ./som-native-interp-op-ee -cp Smalltalk TestSuite/TestHarness.som

    - mx tests-nodestats || true
    - mx tests-coverage || true

    - export PATH=$PATH:/Users/gitlab-runner/Library/Python/3.12/bin
    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" rebench.conf

benchmark-y1:
  stage: benchmark
  needs:
    [
      "build:native-interp-ast",
      "build:native-interp-bc",
      "build:native-interp-op",
    ]

  tags: [yuria]
  script:
    - *BUILD_GRAAL_LOCALLY
    - *DOWNLOAD_BINARIES

    # Profile
    # - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" rebench.conf profiling t:yuria
    # Run Benchmarks
    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" rebench.conf t:yuria
  after_script:
    - sudo reown-project.sh

benchmark-y2:
  stage: benchmark
  needs:
    [
      "build:native-interp-ast",
      "build:native-interp-bc",
      "build:native-interp-op",
    ]
  tags: [yuria2]
  script:
    - *BUILD_GRAAL_LOCALLY
    - *DOWNLOAD_BINARIES

    # Profile
    # - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" rebench.conf profiling t:yuria2
    # Run Benchmarks
    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" rebench.conf t:yuria2
  after_script:
    - sudo reown-project.sh

benchmark-y3:
  stage: benchmark
  needs:
    [
      "build:native-interp-ast",
      "build:native-interp-bc",
      "build:native-interp-op",
    ]
  tags: [yuria3]
  script:
    - *BUILD_GRAAL_LOCALLY
    - *DOWNLOAD_BINARIES

    # Profile
    # - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" rebench.conf profiling t:yuria3
    # Run Benchmarks
    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" rebench.conf t:yuria3
  after_script:
    - sudo reown-project.sh

benchmark-y4:
  stage: benchmark
  needs:
    [
      "build:native-interp-ast",
      "build:native-interp-bc",
      "build:native-interp-op",
    ]
  tags: [yuria4]
  script:
    - *BUILD_GRAAL_LOCALLY
    - *DOWNLOAD_BINARIES

    # Profile
    # - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" rebench.conf profiling t:yuria4 || true
    # Run Benchmarks
    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" rebench.conf t:yuria4
  after_script:
    - sudo reown-project.sh

report-completion:
  stage: benchmark-completion
  tags: [yuria]
  script:
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --report-completion rebench.conf
